version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: rootmysql
      MYSQL_DATABASE: banking_dbv9
      MYSQL_USER: appuser
      MYSQL_PASSWORD: appmysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./banking_dbv9.sql:/docker-entrypoint-initdb.d/banking_dbv9.sql

  mysql-exporter:
    image: prom/mysqld-exporter:v0.14.0
    container_name: mysql-exporter
    environment:
      DATA_SOURCE_NAME: root:rootmysql@tcp(mysql-container:3306)/
    ports:
      - "9104:9104"
    depends_on:
      - mysql

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/dashboards-config:/etc/grafana/provisioning/dashboards-config
    depends_on:
      - prometheus

  cadvisor:
      image: gcr.io/cadvisor/cadvisor:latest
      container_name: cadvisor-container
      ports:
        - "8082:8080"
      command: 
        - "--docker_only=true"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /sys:/sys
        - /var/lib/docker:/var/lib/docker:ro
      restart: unless-stopped
      
  backend:
    build:
      context: .
      dockerfile: Dockerfile.back
    container_name: backend-container
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mysql

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.front
    container_name: frontend-container
    ports:
      - "8080:80"
    depends_on:
      - backend

volumes:
  mysql_data:
    driver: local
